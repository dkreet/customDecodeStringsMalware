import base64

def decryptStrings(ciphertext, key):
	sizeCipher = len(ciphertext)
	sizeKey = len(key)
	decodeBase64 = base64.b64decode(ciphertext.encode('ascii'))
	lastbyteA = chr(ord(key[0]) ^ sizeKey)
	finalText = "";
	#First input Key
	for b in key[1:] :
		lastbyteA = chr(ord(b) ^ ord(lastbyteA))
	#Ciphertext decode and XOR
	xoreado = ord(lastbyteA) ^ ord(chr(0xFF))
	for a in decodeBase64[0:] :
		finalText += chr(ord(a) ^ xoreado)
	print (finalText)

def getStrings():
	it = idaapi.get_imagebase()
	text = ""
	key = ""
	while True:
		ebBeginKey = FindBinary(it, SEARCH_DOWN, "00 00 00 00 FF FF FF FF 06 00 00 00")
		if ebBeginKey != 0xFFFFFFFF: 
			it = ebBeginKey+1
			offsetKey = ebBeginKey + 12
			key = GetManyBytes(offsetKey, 6)
			if key != "OleStr" and key!= "Proxy-":
				eaText = FindBinary(ebBeginKey, SEARCH_UP, "FF FF FF FF ?? 00 00 00")
				text = GetManyBytes(eaText+8, ebBeginKey - (eaText + 8))
				decryptStrings(text,key)		
		else:
			break